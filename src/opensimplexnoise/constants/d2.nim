import std/sequtils
import std/sugar
import ../constants
import ../internaltypes

const STRETCH_2D* = -0.211324865405187    # (1/sqrt(2+1)-1)/2
const SQUISH_2D* = 0.366025403784439      # (sqrt(2+1)-1)/2
const LOOKUP_LEN_2D* = 64
const N2 = 7.69084574549313

const grad2: seq[Grad2] = [
  ( 0.130526192220052,  0.99144486137381),
  ( 0.38268343236509,   0.923879532511287),
  ( 0.608761429008721,  0.793353340291235),
  ( 0.793353340291235,  0.608761429008721),
  ( 0.923879532511287,  0.38268343236509),
  ( 0.99144486137381,   0.130526192220051),
  ( 0.99144486137381,  -0.130526192220051),
  ( 0.923879532511287, -0.38268343236509),
  ( 0.793353340291235, -0.60876142900872),
  ( 0.608761429008721, -0.793353340291235),
  ( 0.38268343236509,  -0.923879532511287),
  ( 0.130526192220052, -0.99144486137381),
  (-0.130526192220052, -0.99144486137381),
  (-0.38268343236509,  -0.923879532511287),
  (-0.608761429008721, -0.793353340291235),
  (-0.793353340291235, -0.608761429008721),
  (-0.923879532511287, -0.38268343236509),
  (-0.99144486137381,  -0.130526192220052),
  (-0.99144486137381,   0.130526192220051),
  (-0.923879532511287,  0.38268343236509),
  (-0.793353340291235,  0.608761429008721),
  (-0.608761429008721,  0.793353340291235),
  (-0.38268343236509,   0.923879532511287),
  (-0.130526192220052,  0.99144486137381)
].map((g2: Grad2) => (g2.dx / N2, g2.dy / N2))

const gradients2D*: seq[Grad2] = collect:
  for i in 0..<PSIZE:
    grad2[i mod grad2.len]

const base2D* = [
  [ 1, 1, 0, 1, 0, 1, 0, 0, 0 ],
  [ 1, 1, 0, 1, 0, 1, 2, 1, 1 ]
]

const p2D* = [ 
  0, 0, 1, -1, 0, 0, -1, 1, 0, 2, 1, 1,
  1, 2, 2, 0, 1, 2, 0, 2, 1, 0, 0, 0
]

const lookupPairs2D* = [
  0, 1, 1, 0, 4, 1, 17, 0, 20, 2, 21, 2,
  22, 5, 23, 5, 26, 4, 39, 3, 42, 4, 43, 3
]